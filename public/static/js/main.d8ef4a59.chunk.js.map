{"version":3,"sources":["components/AppBar.js","config/config.prod.js","utils/RTL.js","components/CouresesTable.js","components/WorkerForm.js","components/SelectMenu.js","components/AlertPopup.js","components/WorkersTable.js","utils/APIUtils.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","serverUrl","jss","create","plugins","jssPreset","rtl","RTL","props","StylesProvider","children","CouresesTable","isRequiredOptions","statusOptions","fields","field","editComponent","propss","Select","value","onChange","e","target","trainingsList","map","trainingItem","index","MenuItem","key","name","option","TextField","type","columns","data","trainings","localization","pagination","labelDisplayedRows","toolbar","nRowsSelected","header","actions","body","emptyDataSourceMessage","filterRow","filterTooltip","addTooltip","deleteTooltip","editTooltip","editRow","deleteText","cancelTooltip","saveTooltip","labelRowsSelect","searchTooltip","searchPlaceholder","editable","onRowAdd","newData","Promise","resolve","setTimeout","onTrainingAdded","onRowUpdate","oldData","onTrainingChange","onRowDelete","console","log","onTrainingDeleted","dialogTitle","textAlign","workerInfoField","width","marginLeft","direction","tableContainer","marginTop","WorkerForm","useState","worker","tempWorker","setTempWorker","handleFieldChange","event","id","handleClose","onClose","Dialog","open","maxWidth","DialogTitle","DialogContent","dividers","Box","display","flexDirection","flexWrap","justifyContent","label","required","defaultValue","InputLabelProps","shrink","oldTrainingData","newTrainingData","trainingIndex","indexOf","push","splice","DialogActions","Button","onClick","onSaveChanges","margin","SelectMenu","Autocomplete","multiple","values","tempTrainings","forEach","onTrainingsChanged","onTagsChange","options","getOptionLabel","renderInput","params","Alert","elevation","AlertPopup","React","reason","Snackbar","autoHideDuration","severity","success","message","overflow","addTraining","float","backgroundColor","addWorker","WorkersTable","openDialog","setOpenDialog","openAlert","setOpenAlert","alertStatus","setAlertStatus","selectedWorker","setSelectedWorker","setTrainingsList","selectedTrainings","setSelectedTrainings","isLoaded","setIsLoaded","workers","setWorkers","workersToDisplay","setWorkersToDisplay","openTrainingDialog","setOpenTrainingDialog","trainingDialogText","setTrainingDialogText","useEffect","getAllWorkers","getAllTrainings","updateWorkersToDisplay","axios","get","then","res","catch","err","error","openWorkerDialog","workerId","closeWorkerDialog","handleDeleteWorker","delete","updateWorkerInfo","workerData","put","tempWorkersToDisplay","completedAllTrainings","trainingName","isCompleted","training","status","workerCompletedTraining","handleCloseTrainingDialog","emptyWorker","selectMenu","dir","reject","icon","tooltip","rowData","aria-labelledby","autoFocus","fullWidth","post","createMuiTheme","typography","fontFamily","App","ThemeProvider","path","from","to","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d8ef4a59.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            מערכת ניהול עובדים והדרכות\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","export const serverUrl = 'https://trainings-backend.herokuapp.com';","import React from 'react';\r\nimport { create } from 'jss';\r\nimport rtl from 'jss-rtl';\r\nimport { StylesProvider, jssPreset } from '@material-ui/core/styles';\r\n\r\n\r\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\r\n\r\nexport default function RTL(props) {\r\n    return (\r\n        <StylesProvider jss={jss}>\r\n            {props.children}\r\n        </StylesProvider>\r\n    );\r\n}","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\n\r\nimport MaterialTable from 'material-table';\r\n\r\nexport default function CouresesTable(props) {\r\n\r\n    const isRequiredOptions = ['נדרש', 'לא נדרש'];\r\n    const statusOptions = ['השתתף', 'לא השתתף'];\r\n    const fields = [\r\n        {\r\n            field: 'name',\r\n            title: 'שם',\r\n            editComponent: propss => (\r\n                <Select\r\n                    value={propss.value || ''}\r\n                    onChange={e => propss.onChange(e.target.value)}\r\n                >\r\n                    {props.trainingsList.map((trainingItem, index) => (\r\n                        <MenuItem key={index} value={trainingItem.name}>{trainingItem.name}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            )\r\n        },\r\n        {\r\n            field: 'isRequired',\r\n            title: 'נדרש',\r\n            editComponent: propss => (\r\n                <Select\r\n                    value={propss.value || ''}\r\n                    onChange={e => propss.onChange(e.target.value)}\r\n                >\r\n                    {isRequiredOptions.map((option, index) => (\r\n                        <MenuItem key={index} value={option}>{option}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            )\r\n        },\r\n        {\r\n            field: 'status',\r\n            title: 'סטטוס',\r\n            editComponent: propss => (\r\n                <Select\r\n                    value={propss.value || ''}\r\n                    onChange={e => propss.onChange(e.target.value)}\r\n                >\r\n                    {statusOptions.map((option, index) => (\r\n                        <MenuItem key={index} value={option}>{option}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            )\r\n        },\r\n        {\r\n            field: 'completionDate',\r\n            title: 'תאריך ביצוע',\r\n            editComponent: props => (\r\n                <TextField\r\n                    type=\"date\"\r\n                    value={props.value || ''}\r\n                    onChange={e => props.onChange(e.target.value)}\r\n                />\r\n            )\r\n        },\r\n        {\r\n            field: 'expiryDate',\r\n            title: 'תאריך תפוגה',\r\n            editComponent: props => (\r\n                <TextField\r\n                    type=\"date\"\r\n                    value={props.value || ''}\r\n                    onChange={e => props.onChange(e.target.value)}\r\n                />\r\n            )\r\n        },\r\n        { field: 'trainerName', title: 'שם מדריך' }\r\n    ]\r\n\r\n    return (\r\n        <MaterialTable\r\n            title=\"הדרכות\"\r\n            columns={fields}\r\n            data={props.trainings}\r\n            localization={{\r\n                pagination: {\r\n                    labelDisplayedRows: '{from}-{to} מתוך {count}'\r\n                },\r\n                toolbar: {\r\n                    nRowsSelected: '{0} שורות נבחרו'\r\n                },\r\n                header: {\r\n                    actions: 'פעולות'\r\n                },\r\n                body: {\r\n                    emptyDataSourceMessage: 'אין רשומות להצגה',\r\n                    filterRow: {\r\n                        filterTooltip: 'סינון'\r\n                    },\r\n                    addTooltip: 'הוספה',\r\n                    deleteTooltip: 'מחיקה',\r\n                    editTooltip: 'עריכה',\r\n                    editRow: {\r\n                        deleteText: 'האם אתה בטוח שברצונך למחוק שורה זו?',\r\n                        cancelTooltip: 'ביטול',\r\n                        saveTooltip: 'שמור'\r\n                    }\r\n                },\r\n                pagination: {\r\n                    labelRowsSelect: 'שורות'\r\n                },\r\n                toolbar: {\r\n                    searchTooltip: 'חיפוש',\r\n                    searchPlaceholder: 'חיפוש'\r\n                }\r\n            }}\r\n            editable={{\r\n                onRowAdd: (newData) =>\r\n                    new Promise((resolve) => {\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                            props.onTrainingAdded(newData);\r\n                        }, 600);\r\n                    }),\r\n                onRowUpdate: (newData, oldData) =>\r\n                    new Promise((resolve) => {\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                            if (oldData) {\r\n                                props.onTrainingChange(oldData, newData);\r\n                            }\r\n                        }, 600);\r\n                    }),\r\n                onRowDelete: (oldData) =>\r\n                    new Promise((resolve) => {\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                            console.log(oldData);\r\n                            props.onTrainingDeleted(oldData);\r\n                        }, 600);\r\n                    }),\r\n            }}\r\n        />\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nimport CoursesTable from './CouresesTable';\r\n\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport { DialogActions } from '@material-ui/core';\r\n\r\nimport RTL from '../utils/RTL';\r\n\r\nconst useStyles = makeStyles({\r\n    dialogTitle: {\r\n        textAlign: \"center\"\r\n    },\r\n    workerInfoField: {\r\n        width: 170,\r\n        marginLeft: 20,\r\n        direction: \"rtl\"\r\n    },\r\n    tableContainer: {\r\n        marginTop: '20px'\r\n    }\r\n});\r\n\r\nexport default function WorkerForm(props) {\r\n    const classes = useStyles();\r\n    const [tempWorker, setTempWorker] = useState({ ...props.worker });\r\n\r\n    const handleFieldChange = (event) => {\r\n        let worker = tempWorker;\r\n        worker[`${event.target.id}`] = event.target.value;\r\n        setTempWorker(worker);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        props.onClose();\r\n    };\r\n\r\n    const handleSave = () => {\r\n        props.onSaveChanges(tempWorker);\r\n    }\r\n\r\n    const handleTrainingChange = (oldTrainingData, newTrainingData) => {\r\n        const trainingIndex = tempWorker.trainings.indexOf(oldTrainingData);\r\n        const data = { ...tempWorker };\r\n        data.trainings[trainingIndex] = newTrainingData;\r\n        setTempWorker(data);\r\n    }\r\n\r\n    const handleTrainingAdded = (newTrainingData) => {\r\n        const data = { ...tempWorker };\r\n        data.trainings.push(newTrainingData);\r\n        setTempWorker(data);\r\n    }\r\n\r\n    const handleTrainingDeleted = (oldTrainingData) => {\r\n        const data = { ...tempWorker };\r\n        data.trainings.splice(data.trainings.indexOf(oldTrainingData), 1);\r\n        setTempWorker(data);\r\n    }\r\n\r\n\r\n\r\n    const fields = [\r\n        { name: 'workerId', label: 'מספר עובד', required: true, type: 'number' },\r\n        { name: 'firstName', label: 'שם פרטי', required: true },\r\n        { name: 'lastName', label: 'שם משפחה', required: true },\r\n        { name: 'birthDate', label: 'תאריך לידה', type: 'datePicker' },\r\n        { name: 'age', label: 'גיל', type: 'number' },\r\n        { name: 'sex', label: 'מין' },\r\n        { name: 'startDate', label: 'תאריך התחלה', type: 'datePicker' },\r\n        { name: 'idNumber', label: 'תעודת זהות' },\r\n        { name: 'phoneNumber', label: 'טלפון' },\r\n        { name: 'phoneNumber2', label: 'טלפון 2' },\r\n        { name: 'city', label: 'עיר' },\r\n        { name: 'address', label: 'כתובת' },\r\n        { name: 'zipCode', label: 'מיקוד' },\r\n        { name: 'departmentHE', label: 'מחלקה' },\r\n        { name: 'departmentEN', label: 'Department' },\r\n        { name: 'roleEmergency', label: 'תפקיד חרום' },\r\n        { name: 'role', label: 'תפקיד' },\r\n        { name: 'team', label: 'תת מחלקה' },\r\n    ]\r\n\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} open={props.open} maxWidth='xl'>\r\n            <DialogTitle className={classes.dialogTitle}>פרטי עובד</DialogTitle>\r\n            <DialogContent dividers>\r\n\r\n                <Box display=\"flex\" flexDirection=\"row\" flexWrap=\"wrap\" justifyContent=\"flex-start\">\r\n                    {fields.map((field, index) => {\r\n                        return field.type === 'datePicker' ?\r\n                            <RTL key={index}>\r\n                                <TextField\r\n                                    id={field.name}\r\n                                    label={field.label}\r\n                                    type=\"date\"\r\n                                    defaultValue={tempWorker[field.name]}\r\n                                    onChange={handleFieldChange}\r\n                                    className={classes.workerInfoField}\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                            </RTL>\r\n                            :\r\n                            <RTL key={index}>\r\n                                <TextField type={field.type} required={field.required} defaultValue={tempWorker[field.name]} className={classes.workerInfoField} id={field.name} label={field.label} onChange={handleFieldChange} ></TextField>\r\n                            </RTL>\r\n                    })\r\n                    }\r\n                </Box>\r\n                <CoursesTable trainingsList={props.trainingsList} trainings={tempWorker.trainings} onTrainingChange={handleTrainingChange} onTrainingAdded={handleTrainingAdded} onTrainingDeleted={handleTrainingDeleted} />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleSave}>\r\n                    שמור\r\n                </Button>\r\n                <Button onClick={handleClose}>\r\n                    בטל\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { getTrainings } from '../utils/APIUtils';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: 500,\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n        margin: 20,\r\n        direction: \"ltr\"\r\n    },\r\n}));\r\n\r\n\r\nexport default function SelectMenu(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const onTagsChange = (event, values) => {\r\n        const tempTrainings = [];\r\n        values.forEach((value) => {\r\n            tempTrainings.push(value.name);\r\n        });\r\n        props.onTrainingsChanged(tempTrainings);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Autocomplete\r\n                multiple\r\n                id=\"tags-standard\"\r\n                onChange={(event, values) => onTagsChange(event, values)}\r\n                options={props.trainingsList}\r\n                getOptionLabel={(option) => option.name}\r\n                renderInput={(params) => (\r\n                    <TextField\r\n                        {...params}\r\n                        variant=\"standard\"\r\n                        label=\"בחירת הדרכות\"\r\n                    />\r\n                )}\r\n            />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function AlertPopup(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(props.open);\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        props.handleClose();\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={props.success ? 'success' : 'error'}>\r\n                    {props.message}\r\n                </Alert>\r\n            </Snackbar>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState, Fragment } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport { getWorkers, getWorkerTrainings, updateWorker, getTrainings, deleteWorker, addTraining } from '../utils/APIUtils'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport RTL from '../utils/RTL';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport WorkerForm from './WorkerForm';\r\nimport SelectMenu from './SelectMenu';\r\nimport AlertPopup from './AlertPopup';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        overflow: \"hidden\"\r\n    },\r\n    addTraining: {\r\n        float: \"right\",\r\n        color: \"white\",\r\n        backgroundColor: \"#4863f8\",\r\n        margin: \"3px\"\r\n    },\r\n    addWorker: {\r\n        float: \"right\",\r\n        color: \"white\",\r\n        backgroundColor: \"#4863f8\",\r\n        margin: \"3px\"\r\n    },\r\n}));\r\n\r\nexport default function WorkersTable() {\r\n    const classes = useStyles();\r\n\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    const [openAlert, setOpenAlert] = useState(false);\r\n    const [alertStatus, setAlertStatus] = useState(null);\r\n\r\n    const [selectedWorker, setSelectedWorker] = useState();\r\n    const [trainingsList, setTrainingsList] = useState([]);\r\n    const [selectedTrainings, setSelectedTrainings] = useState([]);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [workers, setWorkers] = useState([]);\r\n    const [workersToDisplay, setWorkersToDisplay] = useState([]);\r\n    const [openTrainingDialog, setOpenTrainingDialog] = useState(false);\r\n    const [trainingDialogText, setTrainingDialogText] = useState('');\r\n\r\n\r\n    useEffect(() => {\r\n        getAllWorkers();\r\n        getAllTrainings();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        updateWorkersToDisplay();\r\n    }, [workers, trainingsList]);\r\n\r\n    useEffect(() => {\r\n        updateWorkersToDisplay();\r\n    }, [selectedTrainings]);\r\n\r\n\r\n    const getAllWorkers = () => {\r\n        getWorkers()\r\n            .then(res => {\r\n                setWorkers([...res.data]);\r\n                setIsLoaded(true);\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n            });\r\n    }\r\n\r\n    const getAllTrainings = () => {\r\n        getTrainings()\r\n            .then(res => {\r\n                setTrainingsList(res.data);\r\n                setIsLoaded(true);\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n            });\r\n    }\r\n\r\n    const removeWorkerTrainings = (worker) => {\r\n        return worker;\r\n    }\r\n\r\n    const openWorkerDialog = (worker) => {\r\n        let trainings = [];\r\n        getWorkerTrainings(worker.workerId)\r\n            .then(res => {\r\n                trainings = res.data.trainings\r\n            })\r\n            .catch(err => console.error(err))\r\n            .then(() => {\r\n                worker.trainings = trainings;\r\n                setSelectedWorker(worker);\r\n                setOpenDialog(true);\r\n            });\r\n    }\r\n\r\n    const closeWorkerDialog = () => {\r\n        setOpenDialog(false);\r\n    }\r\n\r\n    const openWorkerModifiedAlert = () => {\r\n        const successText = 'עובד עודכן בהצלחה';\r\n        const failedText = 'שגיאה בזמן עדכון העובד';\r\n        return (<AlertPopup handleClose={() => { setOpenAlert(false); setAlertStatus(null) }} open={openAlert} message={alertStatus ? successText : failedText} success={alertStatus}></AlertPopup>);\r\n    }\r\n\r\n    const handleDeleteWorker = (worker) => {\r\n        console.log(worker);\r\n        if (worker?.workerId) {\r\n            deleteWorker(worker.workerId)\r\n                .then(res => {\r\n                    getAllWorkers();\r\n                })\r\n        }\r\n    }\r\n\r\n    const updateWorkerInfo = (tempWorker) => {\r\n        delete tempWorker[\"tableData\"];\r\n        updateWorker(tempWorker)\r\n            .then(res => {\r\n                setAlertStatus(true);\r\n            })\r\n            .catch(err => {\r\n                setAlertStatus(false);\r\n                console.error(err);\r\n            })\r\n            .then(() => {\r\n                getAllWorkers();\r\n                setOpenAlert(true);\r\n            })\r\n        closeWorkerDialog();\r\n    }\r\n\r\n    const workerCompletedTraining = (worker, trainingName) => {\r\n        let isCompleted = false;\r\n        (worker.trainings).forEach(training => {\r\n            if (training.name == trainingName && training.status != \"N/A\" && training.status != \"לא השתתף\") {\r\n                isCompleted = true;\r\n            }\r\n        });\r\n        return isCompleted;\r\n    }\r\n\r\n    const updateWorkersToDisplay = () => {\r\n        const tempWorkersToDisplay = [];\r\n        workers.forEach(worker => {\r\n            let completedAllTrainings = true;\r\n            selectedTrainings.forEach((trainingName) => {\r\n                if (!workerCompletedTraining(worker, trainingName)) {\r\n                    completedAllTrainings = false;\r\n                }\r\n            });\r\n            if (completedAllTrainings) {\r\n                tempWorkersToDisplay.push(removeWorkerTrainings({ ...worker }));\r\n            }\r\n        });\r\n        setWorkersToDisplay(tempWorkersToDisplay);\r\n    }\r\n\r\n    const trainingsChanged = (trainings) => {\r\n        setSelectedTrainings(trainings);\r\n    }\r\n\r\n    const handleCloseTrainingDialog = () => {\r\n        setTrainingDialogText('');\r\n        setOpenTrainingDialog(false);\r\n    }\r\n    const handleSaveTrainingDialog = () => {\r\n        console.log(trainingDialogText);\r\n        addTraining(trainingDialogText)\r\n            .then(res => {\r\n                console.log(res);\r\n                //TODO: show dialog with success adding training text\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n            })\r\n            .then(() => {\r\n                setTrainingDialogText('');\r\n                setOpenTrainingDialog(false);\r\n                getAllTrainings();\r\n            })\r\n\r\n    }\r\n\r\n\r\n\r\n    const fields = [\r\n        { field: 'workerId', title: 'מספר עובד' },\r\n        { field: 'firstName', title: 'שם פרטי' },\r\n        { field: 'lastName', title: 'שם משפחה' },\r\n        { field: 'birthDate', title: 'תאריך לידה', type: 'date' },\r\n        { field: 'age', title: 'גיל' },\r\n        { field: 'sex', title: 'מין' },\r\n        { field: 'startDate', title: 'תאריך התחלה' },\r\n        { field: 'idNumber', title: 'תעודת זהות' },\r\n        { field: 'phoneNumber', title: 'טלפון' },\r\n        { field: 'phoneNumber2', title: 'טלפון 2' },\r\n        { field: 'city', title: 'עיר' },\r\n        { field: 'address', title: 'כתובת' },\r\n        { field: 'zipCode', title: 'מיקוד' },\r\n        { field: 'departmentHE', title: 'מחלקה' },\r\n        { field: 'departmentEN', title: 'Department' },\r\n        { field: 'roleEmergency', title: 'תפקיד חרום' },\r\n        { field: 'role', title: 'תפקיד' },\r\n        { field: 'team', title: 'תת מחלקה' },\r\n    ]\r\n\r\n    const emptyWorker = {\r\n        \"workerId\": \"\",\r\n        \"lastName\": \"\",\r\n        \"firstName\": \"\",\r\n    }\r\n\r\n    if (!isLoaded) {\r\n        return <div>טוען...</div>\r\n    }\r\n    if (isLoaded) {\r\n        return (\r\n            <div>\r\n                <RTL>\r\n                    <div className={classes.root}>\r\n                        <SelectMenu className={classes.selectMenu} trainingsList={trainingsList} onTrainingsChanged={trainingsChanged} />\r\n                        <Button className={classes.addTraining} onClick={() => setOpenTrainingDialog(true)} variant=\"contained\">הוספת הדרכה</Button>\r\n                        <Button className={classes.addWorker} onClick={() => openWorkerDialog(emptyWorker)} variant=\"contained\">הוספת עובד</Button>\r\n                    </div>\r\n                </RTL>\r\n                <RTL>\r\n                    <MaterialTable\r\n                        title=\"עובדים\"\r\n                        columns={fields}\r\n                        data={workersToDisplay}\r\n                        dir=\"rtl\"\r\n                        localization={{\r\n                            pagination: {\r\n                                labelDisplayedRows: '{from}-{to} מתוך {count}'\r\n                            },\r\n                            toolbar: {\r\n                                nRowsSelected: '{0} שורות נבחרו'\r\n                            },\r\n                            header: {\r\n                                actions: 'פעולות'\r\n                            },\r\n                            body: {\r\n                                emptyDataSourceMessage: 'אין רשומות להצגה',\r\n                                filterRow: {\r\n                                    filterTooltip: 'סינון'\r\n                                },\r\n                                addTooltip: 'הוספה',\r\n                                deleteTooltip: 'מחיקה',\r\n                                editTooltip: 'עריכה',\r\n                                editRow: {\r\n                                    deleteText: 'האם אתה בטוח שברצונך למחוק שורה זו?',\r\n                                    cancelTooltip: 'ביטול',\r\n                                    saveTooltip: 'שמור'\r\n                                }\r\n                            },\r\n                            pagination: {\r\n                                labelRowsSelect: 'שורות'\r\n                            },\r\n                            toolbar: {\r\n                                searchTooltip: 'חיפוש',\r\n                                searchPlaceholder: 'חיפוש'\r\n                            }\r\n                        }}\r\n                        editable={{\r\n                            onRowDelete: oldData =>\r\n                                new Promise((resolve, reject) => {\r\n                                    setTimeout(() => {\r\n                                        handleDeleteWorker(oldData);\r\n                                        resolve()\r\n                                    }, 1000)\r\n                                }),\r\n                        }}\r\n                        actions={[\r\n                            {\r\n                                icon: 'info',\r\n                                tooltip: 'פרטים נוספים',\r\n                                onClick: (event, rowData) => {\r\n                                    openWorkerDialog(rowData);\r\n                                }\r\n                            },\r\n                        ]}\r\n                    />\r\n                    {openDialog ?\r\n                        <WorkerForm worker={selectedWorker} trainingsList={trainingsList} open={openDialog} onClose={closeWorkerDialog} onSaveChanges={(tempWorker) => updateWorkerInfo(tempWorker)} />\r\n                        :\r\n                        null\r\n                    }\r\n                    {openAlert ?\r\n                        openWorkerModifiedAlert()\r\n                        :\r\n                        null\r\n                    }\r\n                </RTL>\r\n                <Dialog open={openTrainingDialog} onClose={handleCloseTrainingDialog} aria-labelledby=\"form-dialog-title\">\r\n                    <DialogTitle id=\"form-dialog-title\">הוספת הדרכה</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"name\"\r\n                            label=\"שם הדרכה\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            onChange={e => setTrainingDialogText(e.target.value)}\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleCloseTrainingDialog} color=\"primary\">\r\n                            ביטול\r\n                    </Button>\r\n                        <Button onClick={handleSaveTrainingDialog} color=\"primary\">\r\n                            הוספה\r\n                    </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import axios from 'axios';\r\n// import { serverUrl } from '../config/config.dev';\r\nimport { serverUrl } from '../config/config.prod';\r\n\r\n// import { } from 'dotenv/config';\r\n\r\nexport function getWorkers() {\r\n    return axios.get(`${serverUrl}/api/workers`);\r\n}\r\nexport function getWorkerTrainings(workerId) {\r\n    return axios.get(`${serverUrl}/api/workers/trainings`, {\r\n        params: {\r\n            workerId: workerId\r\n        }\r\n    });\r\n}\r\n\r\nexport function updateWorker(workerData) {\r\n    return axios.put(`${serverUrl}/api/workers`, workerData);\r\n}\r\n\r\nexport function getTrainings() {\r\n    return axios.get(`${serverUrl}/api/trainings`);\r\n}\r\n\r\nexport function addTraining(trainingName) {\r\n    return axios.post(`${serverUrl}/api/trainings`, { name: trainingName });\r\n}\r\n\r\nexport function deleteWorker(workerId) {\r\n    return axios.delete(`${serverUrl}/api/workers`, {\r\n        params: {\r\n            workerId: workerId\r\n        }\r\n    });\r\n}","import React from 'react';\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\n\r\nimport AppBar from './components/AppBar';\r\nimport WorkersTable from './components/WorkersTable';\r\n\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nconst theme = createMuiTheme({\r\n  direction: \"rtl\",\r\n  backgroundColor: \"#eeeee\",\r\n  typography: {\r\n    fontFamily: \"Segoe UI\",\r\n  },\r\n});\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div className=\"App\">\r\n        <AppBar></AppBar>\r\n        <Switch>\r\n          <Route key=\"mainView\" path=\"/mainView\">\r\n            <WorkersTable />\r\n          </Route>\r\n          <Redirect from=\"*\" to=\"/mainView\" />\r\n        </Switch>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App></App>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}